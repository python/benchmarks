# Installer requirements
# ----------------------
#
# The list of installer requirements is hardcoded in performance/venv.py
#
# Note: installer requirements are also used in .travis.yml

# html5lib requires setuptools 18.5 or newer
setuptools>=18.5
# pip 6 is the first version supporting environment markers
pip>=6.0
# install wheel so pip can cache binary wheel packages locally,
# and install prebuilt wheel packages from PyPI
wheel


# Indirect dependencies
# ---------------------
#
# Freeze indirect dependencies to get a more reproductible test environment

# tornado 4.4.1 dependencies
backports-abc==0.4
singledispatch==3.4.0.3
certifi==2016.8.31

# spambayes 1.1b2 dependencies
lockfile==0.12.2; python_version < '3.0'
pydns==2.3.6; python_version < '3.0'

# Mako 1.0.4 dependencies
MarkupSafe==0.23

# html5lib 0.999999999 dependencies
webencodings==0.5

# perf dependencies (docutils is needed by statistics)
statistics==1.0.3.5; python_version < '3.4'
docutils==0.12


# performance dependencies
# ------------------------

six==1.10.0
perf==0.7.11


# Benchmarks dependencies
# -----------------------
#
# When one of these dependencies is upgraded, the performance major version
# should be increased to respect semantic versionning. Comparison between
# two performance results of two different major versions is not reliable.

Chameleon==2.24                           # chameleon
Django==1.10.1                            # django_template
Mako==1.0.4                               # mako
dulwich==0.14.1                           # dulwich_log
mercurial==3.9.1; python_version < '3.0'  # hg_startup
html5lib==0.999999999                     # html5lib
pathlib2==2.1.0; python_version < '3.4'   # pathlib
spambayes==1.1b2; python_version < '3.0'  # spambayes
tornado==4.4.1                            # tornado_http


# Optional dependencies
# ---------------------
#
# The list of optional dependencies is hardcoded in performance/venv.py

psutil==4.3.1


# performance
# -----------
#
# The performance module is installed inside the virtual environment
# by performance/venv.py
